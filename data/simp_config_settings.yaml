#========================================================================
# SIMP global configuration
#
# Generated for 'simp' scenario on 2024-04-20 15:37:38
# using simp-cli version 7.0.0
#========================================================================
---
# === chrony::servers ===
# NTP time servers used by cronyd
chrony::servers: "%{alias('simp_options::ntp::servers')}"

# === simp::runlevel ===
# The default system runlevel (1-5).
simp::runlevel: 3

# === simp_options::dns::search ===
# The DNS domain search string.
#
# Remember to put these in the appropriate order for your environment!
simp_options::dns::search:
  - test.local

# === simp_options::dns::servers ===
# A list of DNS servers for the managed hosts.
#
# If the first entry of this list is set to '127.0.0.1', then
# all clients will configure themselves as caching DNS servers
# pointing to the other entries in the list.
#
# If you are using the SIMP ``resolv`` module, and the system is a DNS server
# using the SIMP ``named`` module but you wish to have your node point to a
# different DNS server for primary DNS resolution, then you MUST set
# ``resolv::named_server`` to ``true`` via Hiera.
#
# This will get around the convenience logic that was put in place to handle
# the caching entries and will not attempt to convert your system to a
# caching DNS server.
simp_options::dns::servers:
  - 192.168.1.15

# === simp_options::fips ===
# Prepare system to use FIPS mode.
#
# simp_options::fips enforces strict compliance with FIPS-140-2.  All core SIMP
# modules can support this configuration. Enabling simp_options::fips will
# enable FIPS on this puppet environment.
#
# IMPORTANT:
# (1) Be sure you know the security tradeoffs of FIPS-140-2 compliance.
#     FIPS mode disables the use of MD5, but may require weaker ciphers or key
#     lengths than your security policies allow.
# (2) If the system is currently in FIPS mode and you set this option to false,
#     the system will still work.  ***The reverse is not necessarily true.***
#     See SIMP documentation for manual instructions on how to safely convert
#     a non-FIPS system to a FIPS system.
# (3) When set from `simp config`, this value is the actual system setting
#     at the time `simp config` was run, and cannot be overriden by any
#     command line/answers file input to `simp config`. This behavior is to
#     protect the user from unintended system corruption described in (2).
#
simp_options::fips: false

# === simp_options::ntp::servers ===
# Your network's NTP time servers.
#
# A consistent time source is critical to a functioning public key
# infrastructure, and thus your site security. **DO NOT** attempt to
# run multiple production systems using individual hardware clocks!
#
# For many networks, the default gateway (192.168.1.254) provides an NTP server.
simp_options::ntp::servers:
  - 192.168.1.15

# === simp_options::puppet::ca ===
# The Puppet Certificate Authority.
simp_options::puppet::ca: sicura1.test.local

# === simp_options::puppet::ca_port ===
# The port on which the Puppet Certificate Authority will listen
# (8141 by default).
simp_options::puppet::ca_port: 8141

# === simp_options::puppet::server ===
# The Hostname or FQDN of the Puppet server.
simp_options::puppet::server: sicura1.test.local

# === simp_options::syslog::log_servers ===
# The log server(s) to receive forwarded logs.
#
# No log forwarding is enabled when this list is empty.  Only use hostnames
# here if at all possible.
simp_options::syslog::log_servers: []

# === simp_options::trusted_nets ===
# A list of subnets to permit, in CIDR notation.
#
# If you need this to be more (or less) restrictive for a given class,
# you can override it in Hiera.
simp_options::trusted_nets:
  - 192.168.1.0/24

# === svckill::mode ===
# Strategy svckill should use when it encounters undeclared services.
#
# 'enforcing' = Shut down and disable all services not listed in your
#               manifests or the exclusion file
# 'warning'   = Only report what undeclared services should be shut
#               down and disabled, without actually making the changes
#               to the system
#
# NOTICE: svckill is the mechanism that SIMP uses to comply with the
# requirement that no unauthorized services are running on your system.
# If you are fully aware of all services that need to be running on the
# system, including any custom applications, use 'enforcing'.  If you
# first need to ascertain which services should be running on the system,
# use 'warning'.
svckill::mode: warning

# === useradd::securetty ===
# A list of TTYs for which the root user can login.
#
# When useradd::securetty is an empty list, the system will satisfy FISMA
# regulations, which require root login via any TTY (including the console)
# to be disabled.  For some systems, the inability to login as root via the
# console is problematic.  In that case, you may wish to include at least
# tty0 to the list of allowed TTYs, despite the security risk.
#
useradd::securetty: []


simp::classes:
  - simp::yum::repo::internet_simp
